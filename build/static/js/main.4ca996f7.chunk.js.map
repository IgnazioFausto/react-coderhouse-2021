{"version":3,"sources":["firebase/config.js","components/ItemListContainer/StyledComponents/Card.js","components/ItemListContainer/StyledComponents/Card.Title.js","components/ItemListContainer/StyledComponents/Boton.js","components/ItemListContainer/StyledComponents/CardText.js","components/ItemListContainer/Items.js","components/ItemListContainer/ItemList.js","helpers/img-loading/fruit-vector.svg","helpers/loadingLogo.js","helpers/LoadingFull.js","context/UIContext.js","components/ItemListContainer/ItemListContainer.js","components/NavBar/BrandLogo.js","context/CartContext.js","components/NavBar/CartWidget.js","components/NavBar/NavBar.js","components/ItemListContainer/Contacto.js","components/ItemListContainer/StyledComponents/CardItemDetail.js","components/ItemCount/ItemCount.js","components/ItemDetailContainer/ItemDetail.js","components/ItemDetailContainer/ItemDetailContainer.js","components/CartContent/CartListEmpty.js","components/CartContent/CartList.js","components/CartContent/CartContainer.js","components/Checkout/Checkout.js","firebase/generarOrden.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","firestore","TarjetaItem","styled","Card","CardTitle","Title","Boton","Button","CardText","p","Item","id","name","precio","img","className","Body","style","width","src","loader","Spinner","animation","variant","to","ItemList","items","map","item","key","Loading","loadIcon","alt","LoadingFull","UIContext","createContext","UIProvider","children","useState","loading","setLoading","Provider","value","ItemListContainer","setItems","useContext","categoryId","useParams","useEffect","productos","collection","where","get","then","response","newItems","docs","doc","data","catch","err","console","log","finally","error","BrandLogo","CartContext","initCart","JSON","parse","localStorage","getItem","CartProvider","cart","setCart","setItem","stringify","removeItem","itemId","newCart","filter","prod","vaciarCarrito","calcularCantidad","reduce","acc","cantidad","addToCart","isInCart","some","calcularTotal","CartWidget","length","visibility","NavBar","Navbar","collapseOnSelect","expand","bg","Container","exact","Toggle","Collapse","Nav","activeClassName","Contacto","fontSize","padding","margin","CardItemDetail","ItemCount","quantity","setCantidad","onClick","ItemDetail","description","category","push","useHistory","maxWidth","height","display","color","ItemDetailContainer","CartListEmpty","CartList","pos","CartContainer","Checkout","nombre","apellido","tel","email","validation","values","setValues","handleInputChange","e","target","textAlign","onSubmit","preventDefault","Swal","fire","icon","iconColor","title","confirmButtonText","confirmButtonColor","datos","total","Promise","resolve","reject","a","orden","buyer","el","date","Timestamp","fromDate","Date","db","orders","itemsToUpdate","FieldPath","documentId","query","batch","outOfStock","forEach","itemInCart","find","update","ref","add","res","commit","generarOrden","text","willClose","join","type","placeholder","onChange","Badge","pill","disabled","App","render","match","alwaysRender","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ca996f7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n\r\n// config de firebase/firestore\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCTV6vswVrZQjbi6NaCheCeanGITRx7-NE\",\r\n  authDomain: \"mi-huertapp.firebaseapp.com\",\r\n  projectId: \"mi-huertapp\",\r\n  storageBucket: \"mi-huertapp.appspot.com\",\r\n  messagingSenderId: \"639868948893\",\r\n  appId: \"1:639868948893:web:092717bc92534dc8a85f74\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig)\r\n\r\nexport const getFirestore = () => {\r\n    return firebase.firestore(app)\r\n}","import styled from \"styled-components\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport const TarjetaItem = styled(Card)`\r\n    background-color:white;\r\n    width: 14rem;\r\n    min-width: 10rem;\r\n    height:auto;\r\n    margin:1rem auto;\r\n    align-items:center;\r\n    text-align:center;\r\n`\r\n","import styled from \"styled-components\";\r\nimport { Card } from 'react-bootstrap'\r\n\r\nexport const CardTitle = styled(Card.Title)`\r\n    color:#D63C10;\r\n    margin:0 auto;\r\n    font-size:2rem;\r\n    font-family: 'Raleway', sans-serif;\r\n    font-weight: 900;\r\n`","import styled from \"styled-components\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const Boton = styled(Button)`\r\n    margin:auto .5rem;\r\n    background-color:#E97333;\r\n    border: 2px solid #B4B242;\r\n    font-family:'Raleway', sans-serif;\r\n    font-weight:900;\r\n    &:hover {\r\n        background-color: #4C5064;\r\n        border: 2px solid #4C5064;\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const CardText = styled.p`\r\n    font-family:'Raleway', sans-serif;\r\n    font-weight:900;\r\n    font-size:1.2rem;\r\n    padding: .5rem auto;\r\n    margin: 1rem 1rem;\r\n    text-align:center;\r\n`","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { TarjetaItem } from './StyledComponents/Card'\r\nimport { CardTitle } from './StyledComponents/Card.Title'\r\nimport { Boton } from './StyledComponents/Boton'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { Img } from 'react-image'\r\nimport { CardText } from './StyledComponents/CardText'\r\n\r\nexport const Item = ({ id, name, precio, img }) => {\r\n\r\n    \r\n    \r\n    return (\r\n        < TarjetaItem className=\"p-3\" >\r\n            <Card.Body>\r\n                <Img style={{width: '100%'}} src={img} loader={<Spinner animation=\"border\" variant=\"success\" /> }/>\r\n                <CardTitle>{name}</CardTitle>\r\n                <CardText>Precio: ${precio}</CardText>\r\n            </Card.Body>\r\n            {/* llevamos al detalle (ItemDetail) mediante el id pasado por prop que viene desde Firestore */}\r\n            <Link to={`/detail/${id}`}>\r\n                <Boton>Ver producto</Boton>\r\n            </Link>\r\n        </TarjetaItem >\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Item } from './Items'\r\n\r\nexport const ItemList = ({items = []}) => {\r\n\r\n    return (\r\n            //mapeamos los items pasados por props y le asignamos por key su id\r\n            <div className=\"row\">\r\n                { items.map((item) => <Item {...item} key={item.id}/>)}\r\n                    \r\n            </div>\r\n\r\n        \r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/fruit-vector.974b0ff5.svg\";","import React from \"react\";\r\nimport loadIcon from './img-loading/fruit-vector.svg'\r\nimport './loadingLogo.scss'\r\n\r\nexport const Loading = () => {\r\n\r\n    //acá solo tenemos el icono del loading para ser usado por separado\r\n    return (\r\n        <div className=\"container\">\r\n            <img className=\"loadIcon\" src={loadIcon} alt=\"Loading\" />\r\n        </div >\r\n    )\r\n}","import React from 'react'\r\nimport './LoadingFull.scss'\r\nimport { Loading } from './loadingLogo'\r\n\r\nexport const LoadingFull = () => {\r\n\r\n\r\n    //loading fullscreen\r\n    return (\r\n        <div className=\"loader\">\r\n            <Loading/>\r\n        </div>\r\n    )\r\n}","import React, { createContext, useState } from 'react'\r\n\r\n\r\nexport const UIContext = createContext()\r\n\r\nexport const UIProvider = ({children}) => {\r\n\r\n    //hacemos accesible el loading a toda la app\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    return (\r\n        <UIContext.Provider value={{\r\n            loading,\r\n            setLoading\r\n        }}>\r\n            {children}\r\n        </UIContext.Provider>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { getFirestore } from '../../firebase/config'\r\nimport { ItemList } from './ItemList'\r\nimport { LoadingFull } from '../../helpers/LoadingFull'\r\nimport { UIContext } from '../../context/UIContext'\r\n\r\n\r\nexport const ItemListContainer = () => {\r\n\r\n    const [items, setItems] = useState([])\r\n\r\n    const { loading, setLoading } = useContext(UIContext)\r\n\r\n    const { categoryId } = useParams()\r\n\r\n    try {\r\n        useEffect(() => {\r\n            setLoading(true)\r\n            //hacemos la llamada a la bd\r\n            const db = getFirestore();\r\n            const productos = db.collection('productos');\r\n            //condicionamos la respuesta si tiene categoryId (para las secciones fruta/verdura)\r\n            if (categoryId) {\r\n                const filtrado = productos.where('category', '==', categoryId)\r\n                filtrado.get()\r\n                    .then((response) => {\r\n                        const newItems = response.docs.map((doc) => {\r\n                            return { id: doc.id, ...doc.data() }\r\n                        })\r\n                        setItems(newItems)\r\n                    })\r\n\r\n                    .catch((err) => console.log(err))\r\n                    .finally(() => {\r\n                        setLoading(false)\r\n                    })\r\n\r\n            } else {\r\n\r\n                //si la respuesta no tiene categoryId se renderizan todos los productos (en el ItemListContainer)\r\n                productos.get()\r\n                    .then((response) => {\r\n                        const newItems = response.docs.map((doc) => {\r\n                            return { id: doc.id, ...doc.data() }\r\n                        })\r\n                        setItems(newItems)\r\n                    })\r\n\r\n                    .catch((err) => console.log(err))\r\n                    .finally(() => {\r\n                        setLoading(false)\r\n                    })\r\n\r\n            }\r\n        }, [categoryId, setLoading])\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"container my-5\">\r\n\r\n            {\r\n                loading\r\n                    ? <LoadingFull />\r\n                    : <ItemList items={items} />\r\n            }\r\n\r\n        </section>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport { GiThreeLeaves } from 'react-icons/gi'\r\n\r\nexport const BrandLogo = () => {\r\n    return (\r\n        <GiThreeLeaves className=\"logo\" />\r\n    )\r\n}\r\n","import { createContext } from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const CartContext = createContext()\r\n\r\n//Contexto del cart con todas sus funciones\r\n\r\nconst initCart = JSON.parse(localStorage.getItem('carrito')) || []\r\n\r\nexport const CartProvider = ({ children }) => {\r\n\r\n    const [cart, setCart] = useState(initCart)\r\n\r\n    const addToCart = (item) => {\r\n        setCart([...cart, item])\r\n    }\r\n\r\n    const removeItem = (itemId) => {\r\n        const newCart = cart.filter((prod) => prod.id !== itemId)\r\n        setCart(newCart)\r\n    }\r\n\r\n    const calcularCantidad = () => {\r\n        return cart.reduce((acc, prod) => acc + prod.cantidad, 0)\r\n    }\r\n    const calcularTotal = () => {\r\n        return cart.reduce( (acc, prod) => acc + prod.cantidad * prod.precio, 0)\r\n    }\r\n    const vaciarCarrito = () => {\r\n        setCart([])\r\n    }\r\n    const isInCart = (itemId) => {\r\n        return cart.some( (prod) => prod.id === itemId)\r\n    }\r\n    //guardamos el cart en localStorage cada vez que cambia\r\n    useEffect(() => {\r\n        localStorage.setItem('carrito', JSON.stringify(cart))\r\n    }, [cart])\r\n\r\n    return (\r\n        <CartContext.Provider value={{\r\n            cart,\r\n            removeItem,\r\n            vaciarCarrito,\r\n            calcularCantidad,\r\n            addToCart,\r\n            isInCart,\r\n            calcularTotal\r\n        }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useContext } from 'react';\r\nimport { BsFillBasketFill } from \"react-icons/bs\";\r\nimport { CartContext } from '../../context/CartContext';\r\n\r\nexport const CartWidget = () => {\r\n\r\n    const { calcularCantidad, cart } = useContext(CartContext)\r\n\r\n    return (\r\n        <div>\r\n        {   //condicionamos si el cart esta vacío\r\n            cart.length === 0\r\n            ?\r\n            <>\r\n            {/* icono del cart + se oculta el span que muestra la cantidad de kilos totales cuando es 0 */}\r\n                <BsFillBasketFill className=\"widget\" />\r\n                <span style={{visibility: calcularCantidad() === 0 ? \"hidden\" : \"visible\"}}>{calcularCantidad()}Kg</span>\r\n            </>\r\n            :\r\n            <>\r\n            {/* icono del cart + cantidad de kilos totales de todos los productos en el cart */}\r\n                <BsFillBasketFill className=\"widget\" />\r\n                <span className=\"counter\">{calcularCantidad()}Kg</span>\r\n            </>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './NavBar.scss'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport { BrandLogo } from './BrandLogo'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CartWidget } from './CartWidget'\r\n\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n\r\n        //desarrollamos el navbar con NavLink's del 'react-router-dom'\r\n        //y Navbar, Nav y Container de 'react-bootstrap'\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <BrandLogo />\r\n                <NavLink className=\"titulo\" exact to=\"/home\">Mi Huert<i>app</i></NavLink>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"logo\"/> \r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto nav\">\r\n                        {/* navlinks tienen un estado activado para mejorar la UX */}\r\n                        <NavLink className=\"linkNav\" activeClassName={'linkNavActive'} exact to=\"/home\">Home</NavLink>\r\n                        <NavLink className=\"linkNav\" activeClassName={'linkNavActive'} exact to=\"/productos/fruta\">Frutas</NavLink>\r\n                        <NavLink className=\"linkNav\" activeClassName={'linkNavActive'} exact to=\"/productos/verdura\">Verduras</NavLink>\r\n                        <NavLink className=\"linkNav\" activeClassName={'linkNavActive'} exact to=\"/contacto\">Contacto</NavLink>\r\n                        <NavLink className=\"linkNav\" activeClassName={'linkNavActive'} exact to=\"/cart\"><CartWidget /></NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { CardTitle } from \"./StyledComponents/Card.Title\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { CardText } from \"./StyledComponents/CardText\";\r\nimport { FaFacebookF, FaInstagram, FaGoogle } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BrandLogo } from \"../NavBar/BrandLogo\";\r\n\r\nexport const Contacto = () => {\r\n    return (\r\n        <Card style={{ width: '80%' }} className=\"container m-auto mt-5 text-center\">\r\n            <Card.Body>\r\n                <CardTitle className=\"mx-auto my-2\">CONTACTO</CardTitle>\r\n                <hr />\r\n                <CardText style={{ fontSize: '1.4rem', padding: ' 0 8% ' }}>Ante cualquier sugerencia, consulta o reclamo, puedes contactarnos mediante nuestros canales de atención o redes sociales.</CardText>\r\n                <br />\r\n                <CardText><FaFacebookF style={{ fontSize: '2.5rem', margin: '1rem auto' }} /><br /> <Link to=\"#\">www.facebook.com/mihuertapp</Link> </CardText>\r\n                <br />\r\n                <CardText><FaInstagram style={{ fontSize: '2.5rem', margin: '1rem auto' }} /><br /> <Link to=\"#\">www.instagram.com/mihuertapp_ok</Link></CardText>\r\n                <br />\r\n                <CardText><FaGoogle style={{ fontSize: '2.5rem', margin: '1rem auto' }} /><br /> <Link to=\"#\">mihuertapp-consultas@gmail.com.ar</Link></CardText>\r\n                <br />\r\n                <hr /><br />\r\n                <BrandLogo />\r\n                <CardText>Mi Huertapp 2021</CardText>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import styled from \"styled-components\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport const CardItemDetail = styled(Card)`\r\n    background-color:white;\r\n    width:80%;\r\n    margin:.5rem auto;\r\n    justify-content:center;\r\n    text-align:center\r\n`","import React from \"react\";\r\n\r\n\r\n//para controlar la cantidad del producto a pedir\r\nexport const ItemCount = ({ quantity, cantidad, setCantidad }) => {\r\n    //condicionamos para no permitir ni cantidad en 0 ni pedir más de lo que se indica en quantity (bd)\r\n    const handleRestar = () => {\r\n        if (cantidad > 0) { \r\n        setCantidad(cantidad - 1) }\r\n    }\r\n    const handleSumar = () => {\r\n        if (cantidad < quantity) { \r\n        setCantidad(cantidad + 1)}\r\n    }\r\n    return (\r\n            \r\n        <div>\r\n            <div>Stock: {quantity} kg.</div>\r\n            <br/>\r\n            <button\r\n                onClick={handleRestar}\r\n                className={`btn ${cantidad === 0 ? \"invisible\" : \"btn-success\"}`}> - \r\n            </button>\r\n            <span className=\"mx-3\">{cantidad} Kg</span>\r\n            <button\r\n                onClick={handleSumar}\r\n                className={`btn ${cantidad >= quantity ? \"invisible\" : \"btn-success\"}`}>+\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Card } from 'react-bootstrap'\r\nimport { CardItemDetail } from '../ItemListContainer/StyledComponents/CardItemDetail'\r\nimport { CardTitle } from '../ItemListContainer/StyledComponents/Card.Title'\r\nimport { CardText } from '../ItemListContainer/StyledComponents/CardText'\r\nimport { ItemCount } from '../ItemCount/ItemCount'\r\nimport { CartContext } from '../../context/CartContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { Img } from 'react-image'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport const ItemDetail = ({ id, name, precio, img, description, category, quantity }) => {\r\n\r\n    const { push } = useHistory()\r\n\r\n    const [cantidad, setCantidad] = useState(0)\r\n\r\n    const { addToCart, isInCart, removeItem } = useContext(CartContext)\r\n\r\n    // para controlar el agregar los items\r\n    const handleAdd = () => {\r\n        \r\n        const newItem = {\r\n            id,\r\n            name,\r\n            precio,\r\n            category,\r\n            cantidad,\r\n            img\r\n        }\r\n        //condicionamos para que no se agreguen items con cantidad 0\r\n        if (cantidad > 0) {\r\n            addToCart(newItem)\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n        <CardItemDetail style={{maxWidth:'50%', height:'100%'}} >\r\n            <Card.Body>\r\n                <Img style={{ width: '25%' }} src={img} loader={<Spinner animation=\"border\" variant=\"success\" />} />\r\n                <CardTitle>{name}</CardTitle>\r\n                <CardText>Precio: ${precio}/Kg.</CardText>\r\n                <CardText>{description}</CardText>\r\n                <hr />\r\n\r\n                { //condicionamos, si está en el carrito\r\n                    isInCart(id)\r\n                        ?\r\n                        <>\r\n                            <Link to=\"/cart\" className=\"btn btn-success mt-3\">Termina tu compra</Link>\r\n                            <span style={{ display: 'block', margin: '1rem auto' }}>o si quieres...</span> <button onClick={() => removeItem(id)} className=\"btn btn-success mx-3\">Elige otra cantidad</button>\r\n                        </>\r\n                        :\r\n                        <>  { //condicionamos de nuevo, para revisar si tenemos stock en bd \r\n                            quantity === 0\r\n                            ?\r\n                            <CardTitle style={{fontSize: '1.5rem', color: 'green'}}>De momento sin stock.</CardTitle>\r\n                            :\r\n                            <>\r\n                                <ItemCount quantity={quantity} cantidad={cantidad} setCantidad={setCantidad} />\r\n                                <button className={`btn ${cantidad === 0 ? \"mt-3 invisible\" : \"mt-3 btn-success\"}`} onClick={handleAdd}>Agregar a la cesta</button>\r\n                            </>}\r\n                        </>\r\n                }\r\n                <hr />\r\n                <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={() => push(`/productos/${category}`)}\r\n                >\r\n                    Ver más {category}s\r\n                </button>\r\n                <button className=\"btn btn-outline-success m-2\" onClick={() => push(\"/home\")}>\r\n                    Volver a Home\r\n                </button>\r\n\r\n\r\n            </Card.Body>\r\n        </CardItemDetail>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UIContext } from \"../../context/UIContext\";\r\nimport { getFirestore } from \"../../firebase/config\";\r\nimport { LoadingFull } from \"../../helpers/LoadingFull\";\r\nimport { ItemDetail } from './ItemDetail'\r\n\r\nexport const ItemDetailContainer = () => {\r\n\r\n    const [item, setItem] = useState(null)\r\n\r\n    const { itemId } = useParams()\r\n\r\n    const { loading, setLoading } = useContext(UIContext)\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true) \r\n\r\n        \r\n        //obtenemos los datos desde firestore \r\n        const db = getFirestore()\r\n        const productos = db.collection('productos')\r\n        const item = productos.doc(itemId)\r\n        //hacemos un get de los documentos dentro de la colección productos y seteamos los items\r\n        item.get()\r\n            .then(doc => {\r\n                setItem({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                })\r\n                setLoading(false)\r\n            \r\n            })\r\n           \r\n        }, [itemId, setLoading])\r\n    \r\n    \r\n    return (\r\n            <div>\r\n                { //mostramos en el ItemDetail los items desde bd\r\n                    loading\r\n                        ? <LoadingFull />\r\n                        : <ItemDetail {...item} />\r\n                        \r\n                }\r\n            </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CardTitle } from \"../ItemListContainer/StyledComponents/Card.Title\";\r\nimport { Boton } from \"../ItemListContainer/StyledComponents/Boton\";\r\nimport { CardItemDetail } from \"../ItemListContainer/StyledComponents/CardItemDetail\";\r\nimport { Loading } from \"../../helpers/loadingLogo\";\r\n\r\nexport const CartListEmpty = () => {\r\n\r\n    const { push } = useHistory()\r\n\r\n    return ( //Cuando el cart está vacío mostramos gráfico de loading y boton para ir al home (ItemListContainer)\r\n        <div className=\"container mt-5 text-center\">\r\n            <CardItemDetail>\r\n                <div className=\"card-body\">\r\n                    <Loading/>\r\n                    <CardTitle className=\"text-center m-2\">Cesta vacía : (</CardTitle>\r\n                    <Boton onClick={() => push(\"/home\")} className=\"btn btn-success btn-lg m-3\">Ver productos : )</Boton>\r\n                </div>\r\n            </CardItemDetail>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { CardTitle } from \"../ItemListContainer/StyledComponents/Card.Title\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport { HiOutlineBackspace, HiReply } from 'react-icons/hi'\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardText } from \"../ItemListContainer/StyledComponents/CardText\";\r\nimport { BrandLogo } from \"../NavBar/BrandLogo\";\r\n\r\nexport const CartList = () => {\r\n\r\n    const { cart,\r\n        removeItem,\r\n        vaciarCarrito,\r\n        calcularTotal,\r\n        calcularCantidad\r\n    } = useContext(CartContext)\r\n\r\n    return (\r\n        //mapeamos en una card los productos del cart, tomados desde el CartContext\r\n        <div className=\"container text-center\">\r\n            <Card style={{ maxWidth: '300px', margin: '1rem auto' }}>\r\n                <div className=\"card-body\">\r\n                    <CardText style={{ width: '100%', fontSize: '2rem', margin: '0 auto', padding: '0' }}>Resumen de tu compra</CardText>\r\n\r\n                    {   /* generamos las cards con key usando position */\r\n                        cart.map((prod, pos) => (\r\n                            <Card key={pos}>\r\n                                <hr />\r\n                                <img alt=\"imagen de producto\" style={{ width: '6rem', margin: '0 auto' }} src={prod.img} />\r\n                                <CardTitle>{prod.name}</CardTitle>\r\n                                <CardText>{prod.cantidad} Kg.</CardText>\r\n                                <CardText>Precio: ${prod.precio * prod.cantidad}</CardText>\r\n                                <button className=\"btn btn-outline-danger\" style={{ margin: '0 auto', maxWidth: '12rem' }} onClick={() => removeItem(prod.id)}>Quitar de la lista <HiOutlineBackspace /></button>\r\n                                <Link className=\"btn btn-outline-success mt-2\" style={{ margin: '0 auto', maxWidth: '12rem' }} to={`/detail/${prod.id}`} onClick={() => removeItem(prod.id)}><HiReply /> Elegir otra cantidad </Link>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                    <hr />\r\n                    <CardTitle>Total a pagar: ${calcularTotal()}</CardTitle>\r\n                    <CardText>Total de kilos: {calcularCantidad()}</CardText>\r\n                    <hr /> \r\n                    {/* botones vaciar cart, finalizar pedido (lleva al Checkout) y agregar más productos (lleva al ItemListContainer) */}\r\n                    <button className=\"btn btn-outline-danger m-2\" onClick={vaciarCarrito}>Vaciar pedido</button>\r\n                    <Link className=\"btn btn-outline-success m-2\" to=\"/checkout\">Finalizar pedido</Link>\r\n                    <Link className=\"btn btn-success m-2\" to=\"/home\">Seguir agregando productos</Link>\r\n                    <hr />\r\n                    <BrandLogo />\r\n                    <CardText>Mi Huertapp 2021</CardText>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}","import React, { useContext } from \"react\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport { CartListEmpty } from \"./CartListEmpty\";\r\nimport { CartList } from './CartList'\r\n \r\nexport const CartContainer = () => {\r\n\r\n    const { cart,\r\n    } = useContext(CartContext)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            {  \r\n                cart.length === 0\r\n                ?   //si el cart está vacío.\r\n                <>\r\n                    <CartListEmpty /> \r\n                </>\r\n                :   //si el cart tiene productos.\r\n                <>\r\n                    <CartList />\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport { CartContext } from '../../context/CartContext'\r\nimport Swal from 'sweetalert2'\r\nimport { UIContext } from '../../context/UIContext'\r\nimport { Redirect } from 'react-router'\r\nimport { LoadingFull } from '../../helpers/LoadingFull'\r\nimport { CardText } from '../ItemListContainer/StyledComponents/CardText'\r\nimport { Badge, Card } from 'react-bootstrap'\r\nimport { BrandLogo } from '../NavBar/BrandLogo'\r\nimport { useHistory } from 'react-router'\r\nimport { generarOrden } from '../../firebase/generarOrden'\r\n\r\nexport const Checkout = () => {\r\n\r\n    const { push } = useHistory()\r\n\r\n    const { loading, setLoading } = useContext(UIContext)\r\n\r\n    const { cart, calcularTotal, vaciarCarrito } = useContext(CartContext)\r\n\r\n    //valores obtenidos desde el form\r\n    const [values, setValues] = useState({\r\n        nombre: '',\r\n        apellido: '',\r\n        tel: '',\r\n        email: '',\r\n        validation: ''\r\n    })\r\n\r\n    //para manejar el cambio al escribir en cada input\r\n    const handleInputChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    } //controlamos el submit del form\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        //condicionamos los inputs para evitar campos vacíos\r\n        if (values.nombre.length < 3) {\r\n            return (\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    iconColor: '#4C6C14',\r\n                    title: 'Debe ingresar su nombre.',\r\n                    confirmButtonText: 'Ok',\r\n                    confirmButtonColor: '#E97333'\r\n                }))\r\n        }\r\n        if (values.apellido.length < 3) {\r\n            return (\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    iconColor: '#4C6C14',\r\n                    title: 'Debe ingresar su apellido.',\r\n                    confirmButtonText: 'Ok',\r\n                    confirmButtonColor: '#E97333'\r\n                }))\r\n        }\r\n        if (values.email.length < 3) {\r\n            return (\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    iconColor: '#4C6C14',\r\n                    title: 'Debe ingresar su email.',\r\n                    confirmButtonText: 'Ok',\r\n                    confirmButtonColor: '#E97333'\r\n                }))\r\n        }\r\n        if (values.tel.length < 7) {\r\n            return (\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    iconColor: '#4C6C14',\r\n                    title: 'Debe ingresar su teléfono.',\r\n                    confirmButtonText: 'Ok',\r\n                    confirmButtonColor: '#E97333'\r\n                }))\r\n        }\r\n        //validamos si coinciden los correos electrónicos ingresados\r\n        if (values.email === values.validation) {\r\n\r\n            setLoading(true)\r\n            //mostramos loading mientras se genera la orden de compra\r\n            generarOrden(values, cart, calcularTotal())\r\n                .then((res) => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        iconColor: '#4C6C14',\r\n                        title: '¡Su compra fue registrada!',\r\n                        confirmButtonText: '¡Qué bien!',\r\n                        confirmButtonColor: '#E97333',\r\n                        text: `Guarde su código de compra ${res}`,\r\n                        willClose: () => {\r\n                            vaciarCarrito() /* al cerrar, limpiamos el cart */\r\n                        }\r\n                    })\r\n                })\r\n                .catch((err) => {\r\n                    /* mapeamos el err que contiene los productos sin stock */\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        iconColor: 'red',\r\n                        title: `Items sin stock: ${err.map(el => el.name).join(', ')}`,\r\n                        text: 'Revisa el resumen para comprobar el stock',\r\n                        confirmButtonText: 'Ok.',\r\n                        confirmButtonColor: '#E97333'\r\n                    })\r\n                })\r\n                .finally(() => setLoading(false)) //ocultamos el loading\r\n\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                iconColor: '#E97333',\r\n                title: 'Validación',\r\n                text: 'Debe ingresar nuevamente su correo',\r\n                confirmButtonText: 'Ok.',\r\n                confirmButtonColor: '#E97333'\r\n            })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {cart.length === 0 && <Redirect to=\"/home\" />}\r\n\r\n            <Card className=\"container my-5 mx-auto pb-5 text-center\" style={{ width: '60%' }}>\r\n                <CardText style={{ width: '100%', fontSize: '2.5rem', margin: '2rem auto 0 auto', textAlign: 'center' }}>Ingrese sus datos</CardText>\r\n                <hr />\r\n                <div className={`${loading} ? \"container mt-3\" : \"container mt-3 opacity-0\"}`}>\r\n\r\n                    {/* formulario para la compra */}\r\n\r\n                    <form style={{ width: '10rem', margin: '0 auto' }} onSubmit={handleSubmit}>\r\n                        <hr />\r\n                        <input\r\n                            className=\"form-control my-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre\"\r\n                            name=\"nombre\"\r\n                            value={values.nombre}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        {values.nombre.length === 0 && <Badge pill bg=\"danger\">Este campo es obligatorio</Badge>}\r\n\r\n                        <input\r\n                            className=\"form-control my-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Apellido\"\r\n                            name=\"apellido\"\r\n                            value={values.apellido}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        {values.apellido.length === 0 && <Badge pill bg=\"danger\">Este campo es obligatorio</Badge>}\r\n                        <input\r\n                            className=\"form-control my-2\"\r\n                            type=\"tel\"\r\n                            placeholder=\"Teléfono\"\r\n                            name=\"tel\"\r\n                            value={values.tel}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        {values.tel.length === 0 && <Badge pill bg=\"danger\">Este campo es obligatorio</Badge>}\r\n                        <input\r\n                            className=\"form-control my-2\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            value={values.email}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        {values.email.length === 0 && <Badge pill bg=\"danger\">Este campo es obligatorio</Badge>}\r\n                        <input\r\n                            className=\"form-control my-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Confirme su correo\"\r\n                            name=\"validation\"\r\n                            value={values.validation}\r\n                            onChange={handleInputChange}\r\n\r\n                        />\r\n                        {values.email.length === 0 && <Badge pill bg=\"danger\">Este campo es obligatorio</Badge>}\r\n\r\n                        <hr />\r\n                        <button className={`${loading} ? btn btn-success m-2 btn-lg btn-block: m-2 invisible}`} disabled={loading} type=\"submit\" >Finalizar orden</button>\r\n                    </form>\r\n                    <br />\r\n                    <button className=\"btn btn-outline-success btn-sm mb-2\" onClick={() => push(\"/cart\")}>\r\n                        Revisar el resumen\r\n                    </button>\r\n                    <hr /><br />\r\n                    <BrandLogo />\r\n                    <CardText>Mi Huertapp 2021</CardText>\r\n                </div>\r\n            </Card>\r\n            {loading && <LoadingFull />}\r\n        </>\r\n    )\r\n}\r\n","import { getFirestore } from './config'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\nexport const generarOrden = (datos, cart, total) => {\r\n\r\n    //generamos la orden del cart mediante una promise\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        //orden para base de datos\r\n        //que incluye los datos del comprador, los items del cart (con sus propiedades: id, precio y cantidad)\r\n        // el total por props y en date guardamos la hora del pedido\r\n        const orden = {\r\n            buyer: {\r\n                datos,\r\n            },\r\n            items: cart.map((el) => ({ id: el.id, precio: el.precio, cantidad: el.cantidad })),\r\n            total: total,\r\n            date: firebase.firestore.Timestamp.fromDate(new Date())\r\n        }\r\n        //enviar orden a firestore\r\n        const db = getFirestore()\r\n        const orders = db.collection('orders')\r\n\r\n        //indicamos que el update debe hacerse sobre los productos que coincidan en su id\r\n        const itemsToUpdate = db.collection('productos')\r\n            .where(firebase.firestore.FieldPath.documentId(), 'in', cart.map(el => el.id))\r\n\r\n        //indicamos que la orden espere para confirmar stock\r\n        const query = await itemsToUpdate.get();\r\n        const batch = db.batch();\r\n\r\n        //const donde tendremos los productos que estén fuera de stock\r\n        const outOfStock = [];\r\n\r\n        //buscamos, dentro del cart, los productos que no cuenten con stock\r\n        query.docs.forEach((doc) => {\r\n            const itemInCart = cart.find(prod => prod.id === doc.id)\r\n\r\n            //condicionamos si la cantidad pedida es menor o igual a la almacenada en bd\r\n            //hacemos batch actualizando, restando la cantidad pedida a la existente en bd\r\n            if (doc.data().quantity >= itemInCart.cantidad) {\r\n                batch.update(doc.ref, { quantity: doc.data().quantity - itemInCart.cantidad })\r\n                \r\n            //si la cantidad pedida es menor a la cantidad de la bd\r\n            //mandamos ese producto al array outOfStock\r\n            } else {\r\n                outOfStock.push({ ...doc.data(), id: doc.id })\r\n            }\r\n        })\r\n\r\n        //en caso de tener stock en todos los productos.\r\n        if (outOfStock.length === 0) {\r\n\r\n            orders.add(orden)\r\n                .then((res) => {\r\n                    batch.commit()\r\n                    resolve(res.id)\r\n                })\r\n        } else {\r\n            reject(outOfStock)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n","import { ItemListContainer } from './components/ItemListContainer/ItemListContainer'\r\nimport { NavBar } from './components/NavBar/NavBar'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\nimport { Contacto } from './components/ItemListContainer/Contacto'\r\nimport { ItemDetailContainer } from './components/ItemDetailContainer/ItemDetailContainer'\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport { CartContainer } from './components/CartContent/CartContainer'\r\nimport { CartProvider } from './context/CartContext'\r\nimport { Checkout } from './components/Checkout/Checkout'\r\nimport { UIProvider } from './context/UIContext'\r\nimport NoMatch from 'react-router-nomatch'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <UIProvider>\r\n        <CartProvider>\r\n\r\n          <BrowserRouter>\r\n\r\n            <NavBar />\r\n            {/* en caso de ingresarse una URL no definida, se redirecciona al Home */}\r\n            <NoMatch render={ match => (match ? null : <ItemListContainer />) } alwaysRender={ true }>\r\n              \r\n              <Route exact path=\"/home\">\r\n                <ItemListContainer />\r\n              </Route>\r\n              <Route exact path=\"/contacto\">\r\n                <Contacto />\r\n              </Route>\r\n              <Route exact path=\"/productos/:categoryId\"> {/* filtramos por categoria (fruta/verdura) */}\r\n                <ItemListContainer />\r\n              </Route>\r\n              <Route exact path=\"/detail/:itemId\"> {/* llevamos al detalle del producto, a través del id automático de la base de datos (Firebase/firestore) */}\r\n                <ItemDetailContainer  />\r\n              </Route>\r\n              <Route exact path=\"/cart\">\r\n                <CartContainer />\r\n              </Route>\r\n              <Route exact path=\"/checkout\">\r\n                <Checkout />\r\n              </Route>\r\n              <Route path=\"*\">\r\n                <Redirect to=\"/home\" />\r\n              </Route>\r\n\r\n            </NoMatch>\r\n\r\n          </BrowserRouter>\r\n\r\n        </CartProvider>\r\n      </UIProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}